{"version":3,"sources":["components/Cards/Card/Card.js","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","images/image.png","App.js","index.js"],"names":["CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","md","xs","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","data","confirmed","recovered","deaths","container","style","textAlign","marginTop","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","toLocaleDateString","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","this","image","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59557514.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n    <Grid item md={3} xs={12} component={Card} className={cx(styles.card, className)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                {cardTitle}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n                {cardSubtitle}\r\n            </Typography>\r\n        </CardContent>\r\n    </Grid>\r\n);\r\n\r\nexport default CardComponent;","import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\nimport styles from './Cards.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Typography style={{textAlign: 'center', marginTop: '50px'}} gutterBottom variant=\"h4\" component=\"h2\">Global</Typography>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <CardComponent\r\n                    className={styles.infected}\r\n                    cardTitle=\"Infected\"\r\n                    value={confirmed.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of active cases from COVID-19.\"\r\n                />\r\n                <CardComponent\r\n                    className={styles.recovered}\r\n                    cardTitle=\"Recovered\"\r\n                    value={recovered.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n                />\r\n                <CardComponent\r\n                    className={styles.deaths}\r\n                    cardTitle=\"Deaths\"\r\n                    value={deaths.value}\r\n                    lastUpdate={lastUpdate}\r\n                    cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n                />\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\n// export const fetchDailyData = async () => {\r\n//   try {\r\n//     const { data } = await axios.get(`${url}/daily`);\r\n\r\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n//   } catch (error) {\r\n//     return error;\r\n//   }\r\n// };\r\n\r\n// Instead of Global, it fetches the daily data for the US\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n\r\n        return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchMyAPI = async () => {\r\n            const initialDailyData = await fetchDailyData();\r\n\r\n            setDailyData(initialDailyData);\r\n        };\r\n\r\n        fetchMyAPI();\r\n    }, []);\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value],\r\n                        },\r\n                    ],\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n                    datasets: [{\r\n                        data: dailyData.map((data) => data.confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map((data) => data.deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                        fill: true,\r\n                    },  {\r\n                        data: dailyData.map((data) => data.recovered),\r\n                        label: 'Recovered',\r\n                        borderColor: 'green',\r\n                        backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                        fill: true,\r\n                    },\r\n                    ],\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n    const [countries, setCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountries(await fetchCountries());\r\n        };\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl className='formControl'>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">United States</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default Countries;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport Cards from './components/Cards/Cards'\r\nimport Chart from './components/Chart/Chart'\r\nimport CountryPicker from './components/CountryPicker/CountryPicker'\r\nimport { fetchData } from './api/';\r\nimport styles from './index.css';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await fetchData();\r\n\r\n        this.setState({ data });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n\r\n        this.setState({ data, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className='container'>\r\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}